version: '3.4'

x-environment:
  &default-environment
    AMAZEEIO: AMAZEEIO

services:
  php:
    build:
      context: ./api
      dockerfile: Dockerfile.php
      target: api_platform_php
    labels:
      lagoon.type: nginx-php
    depends_on:
      - db
    env_file:
      - ./api/.env
    # Comment out these volumes in production
    volumes:
      - ./api:/srv/api:rw,cached
      # If you develop on Linux, uncomment the following line to use a bind-mounted host directory instead
      # - ./api/var:/srv/api/var:rw
    networks:
      - amazeeio-network
      - default

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.nginx
      target: api_platform_nginx
    labels:
      lagoon.type: nginx-php
    depends_on:
      - php
    # Comment out this volume in production
    volumes:
      - ./api/public:/srv/api/public:ro
    ports:
      - "80"
    environment:
      << : *default-environment
      LAGOON_LOCALDEV_URL: api-api-platform.docker.amazee.io
    networks:
      - amazeeio-network
      - default

  cache-proxy:
    build:
      context: ./api
      dockerfile: Dockerfile.varnish
      target: api_platform_varnish
    labels:
      lagoon.type: varnish
    depends_on:
      - api
    volumes:
      - ./api/docker/varnish/conf:/usr/local/etc/varnish:ro
    tmpfs:
      - /usr/local/var/varnish:exec
    ports:
      - "8080"
    environment:
      << : *default-environment
      AMAZEEIO_URL: http://api-platform.docker.amazee.io
    links:
      - api
    networks:
      - amazeeio-network
      - default

  db:
    # In production, you may want to use a managed database service
    image: amazeeio/postgres
    labels:
      lagoon.type: postgres
    environment:
      - POSTGRES_DB=api
      - POSTGRES_USER=api-platform
      # You should definitely change the password in production
      - POSTGRES_PASSWORD=!ChangeMe!
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "5432"

  client:
    # Use a static website hosting service in production
    # See https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#deployment
    build:
      context: ./client
    labels:
      lagoon.type: node
    env_file:
      - ./client/.env
    volumes:
      - ./client:/usr/src/client:rw,cached
      - /usr/src/client/node_modules
    ports:
      - "3000"
    environment:
      << : *default-environment
      AMAZEEIO_HTTP_PORT: 3000
      AMAZEEIO_URL: client-api-platform.docker.amazee.io
    networks:
      - amazeeio-network
      - default
  admin:
    # Use a static website hosting service in production
    # See https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#deployment
    build:
      context: ./admin
    labels:
      lagoon.type: node
    env_file:
      - ./admin/.env
    volumes:
      - ./admin:/usr/src/admin:rw,cached
      - /usr/src/admin/node_modules
    ports:
      - "3000"
    environment:
      << : *default-environment
      AMAZEEIO_HTTP_PORT: 3000
      AMAZEEIO_URL: admin-api-platform.docker.amazee.io
    networks:
      - amazeeio-network
      - default

volumes:
  db-data: {}

networks:
  amazeeio-network:
    external: true
